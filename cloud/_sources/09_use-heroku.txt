.. _use_heroku:

#############################
 Using Heroku
#############################

Heroku provides a free web application deployment services, integrated with 
the Cloud9 development environment through Git and GitHub. Following is a 
brief outline for configuring and deploying a project on Heroku.

Install Heroku Tools
=============================
+  Open a project in Cloud9
+  In the Cloud9 Project, choose :menuselection:`View --> Console` from the menu
+  At the console command line, type::
  
      c9pm install heroku

+  To make sure that your install was successful, and to get ready to use heroku,
   run the following command in your Terminal::
    
      heroku login
  
   Enter your heroku username and password when prompted.

Add Heroku Server to Project
=============================

+  Open a project in Cloud9
+  In the Cloud9 Project, choose :menuselection:`View --> Console` from the menu
+  At the console command line, type::
  
      heroku create
  
   This will create a heroku server for your app, and configure your git 
   repository with a remote location where you can deploy your app.

+  To see the new git heroku deployment branch, type::

      git remote -v
 
+  Open in a new browser tab, and bookmark, the url of your new heroku server,
   which you will see in the output of the ``heroku create`` command. The URL 
   will look similar to this:: 

      random-word-1234.herokuapp.com

+  After making changes to the project in Cloud9 and pushing to the GitHub 
   repository, deploy changes on Heroku with the additional command::

      bash doc-deploy.sh

+  Now you can view your live site at your heroku server URL (which you 
   bookmarked earlier).

.. note:: Did you notice? the :file:`bash doc-deploy.sh` deployment command was 
   the same for either **gh-pages** on GitHub or **heroku**. Curious students 
   should open this program in the editor and investigate how this piece of 
   magic occurs.

Ordinarily Heroku rejects static HTML sites and refuses the deployment, because
Heroku is designed to host active web applications instead. Heroku is tricked 
into hosting the Sphinxdoc HTML as if it were a :program:`PhP` site by the 
presence of two files, generated by the :file:`doc-newproject.sh` script::

   touch _static/index.php
   echo 'php_flag engine off' > _static/.htaccess

This deployment idea is courtesy Kenneth Reitz [#]_. Other techniques for making 
static deployments using special packs for :program:`Ruby` or :program:`PhP` are 
mentioned in the references. [#]_ [#]_ [#]_
   
Private Site Deployment
=============================

When GitHub's **gh-pages** provides free public deployment for static sites, 
another approach is required for sensitive information which must be kept 
private.

We recommend combining Bitbucket for private repository hosting with static
deployment on Heroku. Bitbucket allows unlimited private (and public) 
repositories, but it does not provide additional hosting services for blogs, 
static sites, and so forth, the way Github does.

.. note:: Add Bitbucket registration to article 02_repo_hosts.rst.

htaccess documentation and password generator:

`.htaccess tools and information <http://www.htaccesstools.com/>`_

------

.. rubric:: Footnotes

.. [#] `Kenneth Reitz <https://github.com/kennethreitz>`_, Static sites on 
   heroku cedar, http://kennethreitz.org/exposures/static-sites-on-heroku-cedar.

.. [#] `Guillermo Garron <http://www.garron.me/about.html>`_, Hosting jekyll 
   site for free on heroku, 
   http://www.garron.me/blog/deploy-host-jekyll-static-site-free-heroku.html.

.. [#] `Static build pack <https://github.com/aaltsys/heroku-buildpack-static>`_
   
.. [#] `Static article <http://yobriefca.se/blog/2012/08/21/securely-serving-static-files-on-heroku/>`_
